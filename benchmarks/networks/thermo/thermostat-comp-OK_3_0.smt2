(set-logic QF_NRA_ODE)
(declare-fun x () Real)
(declare-fun vx () Real)
(declare-fun tr () Real)
(declare-fun pr () Real)
(declare-fun on () Real)
(declare-fun o2 () Real)
(declare-fun o1 () Real)
(declare-fun x_0_0 () Real)
(declare-fun x_0_t () Real)
(declare-fun x_1_0 () Real)
(declare-fun x_1_t () Real)
(declare-fun x_2_0 () Real)
(declare-fun x_2_t () Real)
(declare-fun x_3_0 () Real)
(declare-fun x_3_t () Real)
(declare-fun vx_0_0 () Real)
(declare-fun vx_0_t () Real)
(declare-fun vx_1_0 () Real)
(declare-fun vx_1_t () Real)
(declare-fun vx_2_0 () Real)
(declare-fun vx_2_t () Real)
(declare-fun vx_3_0 () Real)
(declare-fun vx_3_t () Real)
(declare-fun tr_0_0 () Real)
(declare-fun tr_0_t () Real)
(declare-fun tr_1_0 () Real)
(declare-fun tr_1_t () Real)
(declare-fun tr_2_0 () Real)
(declare-fun tr_2_t () Real)
(declare-fun tr_3_0 () Real)
(declare-fun tr_3_t () Real)
(declare-fun pr_0_0 () Real)
(declare-fun pr_0_t () Real)
(declare-fun pr_1_0 () Real)
(declare-fun pr_1_t () Real)
(declare-fun pr_2_0 () Real)
(declare-fun pr_2_t () Real)
(declare-fun pr_3_0 () Real)
(declare-fun pr_3_t () Real)
(declare-fun on_0_0 () Real)
(declare-fun on_0_t () Real)
(declare-fun on_1_0 () Real)
(declare-fun on_1_t () Real)
(declare-fun on_2_0 () Real)
(declare-fun on_2_t () Real)
(declare-fun on_3_0 () Real)
(declare-fun on_3_t () Real)
(declare-fun o2_0_0 () Real [8.0])
(declare-fun o2_0_t () Real [8.0])
(declare-fun o2_1_0 () Real [8.0])
(declare-fun o2_1_t () Real [8.0])
(declare-fun o2_2_0 () Real [8.0])
(declare-fun o2_2_t () Real [8.0])
(declare-fun o2_3_0 () Real [8.0])
(declare-fun o2_3_t () Real [8.0])
(declare-fun o1_0_0 () Real [8.0])
(declare-fun o1_0_t () Real [8.0])
(declare-fun o1_1_0 () Real [8.0])
(declare-fun o1_1_t () Real [8.0])
(declare-fun o1_2_0 () Real [8.0])
(declare-fun o1_2_t () Real [8.0])
(declare-fun o1_3_0 () Real [8.0])
(declare-fun o1_3_t () Real [8.0])
(declare-fun time_0 () Real)
(declare-fun time_1 () Real)
(declare-fun time_2 () Real)
(declare-fun time_3 () Real)
(declare-fun mode_0 () Real)
(declare-fun mode_1 () Real)
(declare-fun mode_2 () Real)
(declare-fun mode_3 () Real)
(define-ode flow_1 ((= d/dt[o1] 0) (= d/dt[o2] 0) (= d/dt[on] 0) (= d/dt[pr] -1) (= d/dt[tr] -1) (= d/dt[vx] 0) (= d/dt[x] (+ (* on (* 0.015 (- 100 (+ (+ (* (- 1 (* 2 0.01)) x) (* 0.01 o1)) (* 0.01 o2))))) (* (- 1 on) (* -0.015 (+ (+ (* (- 1 (* 2 0.01)) x) (* 0.01 o1)) (* 0.01 o2))))))))
(define-ode flow_2 ((= d/dt[o1] 0) (= d/dt[o2] 0) (= d/dt[on] 0) (= d/dt[pr] -1) (= d/dt[tr] -1) (= d/dt[vx] 0) (= d/dt[x] (+ (* on (* 0.015 (- 100 (+ (+ (* (- 1 (* 2 0.01)) x) (* 0.01 o1)) (* 0.01 o2))))) (* (- 1 on) (* -0.015 (+ (+ (* (- 1 (* 2 0.01)) x) (* 0.01 o1)) (* 0.01 o2))))))))
(define-ode flow_3 ((= d/dt[o1] 0) (= d/dt[o2] 0) (= d/dt[on] 0) (= d/dt[pr] -1) (= d/dt[tr] -1) (= d/dt[vx] 0) (= d/dt[x] (+ (* on (* 0.015 (- 100 (+ (+ (* (- 1 (* 2 0.01)) x) (* 0.01 o1)) (* 0.01 o2))))) (* (- 1 on) (* -0.015 (+ (+ (* (- 1 (* 2 0.01)) x) (* 0.01 o1)) (* 0.01 o2))))))))
(define-ode flow_4 ((= d/dt[o1] 0) (= d/dt[o2] 0) (= d/dt[on] 0) (= d/dt[pr] -1) (= d/dt[tr] -1) (= d/dt[vx] 0) (= d/dt[x] (+ (* on (* 0.015 (- 100 (+ (+ (* (- 1 (* 2 0.01)) x) (* 0.01 o1)) (* 0.01 o2))))) (* (- 1 on) (* -0.015 (+ (+ (* (- 1 (* 2 0.01)) x) (* 0.01 o1)) (* 0.01 o2))))))))
(assert (<= -20 x_0_0))
(assert (<= x_0_0 100))
(assert (<= -20 x_0_t))
(assert (<= x_0_t 100))
(assert (<= -20 x_1_0))
(assert (<= x_1_0 100))
(assert (<= -20 x_1_t))
(assert (<= x_1_t 100))
(assert (<= -20 x_2_0))
(assert (<= x_2_0 100))
(assert (<= -20 x_2_t))
(assert (<= x_2_t 100))
(assert (<= -20 x_3_0))
(assert (<= x_3_0 100))
(assert (<= -20 x_3_t))
(assert (<= x_3_t 100))
(assert (<= -20 vx_0_0))
(assert (<= vx_0_0 100))
(assert (<= -20 vx_0_t))
(assert (<= vx_0_t 100))
(assert (<= -20 vx_1_0))
(assert (<= vx_1_0 100))
(assert (<= -20 vx_1_t))
(assert (<= vx_1_t 100))
(assert (<= -20 vx_2_0))
(assert (<= vx_2_0 100))
(assert (<= -20 vx_2_t))
(assert (<= vx_2_t 100))
(assert (<= -20 vx_3_0))
(assert (<= vx_3_0 100))
(assert (<= -20 vx_3_t))
(assert (<= vx_3_t 100))
(assert (<= 0 tr_0_0))
(assert (<= tr_0_0 1))
(assert (<= 0 tr_0_t))
(assert (<= tr_0_t 1))
(assert (<= 0 tr_1_0))
(assert (<= tr_1_0 1))
(assert (<= 0 tr_1_t))
(assert (<= tr_1_t 1))
(assert (<= 0 tr_2_0))
(assert (<= tr_2_0 1))
(assert (<= 0 tr_2_t))
(assert (<= tr_2_t 1))
(assert (<= 0 tr_3_0))
(assert (<= tr_3_0 1))
(assert (<= 0 tr_3_t))
(assert (<= tr_3_t 1))
(assert (<= 0 pr_0_0))
(assert (<= pr_0_0 1))
(assert (<= 0 pr_0_t))
(assert (<= pr_0_t 1))
(assert (<= 0 pr_1_0))
(assert (<= pr_1_0 1))
(assert (<= 0 pr_1_t))
(assert (<= pr_1_t 1))
(assert (<= 0 pr_2_0))
(assert (<= pr_2_0 1))
(assert (<= 0 pr_2_t))
(assert (<= pr_2_t 1))
(assert (<= 0 pr_3_0))
(assert (<= pr_3_0 1))
(assert (<= 0 pr_3_t))
(assert (<= pr_3_t 1))
(assert (<= 0 on_0_0))
(assert (<= on_0_0 1))
(assert (<= 0 on_0_t))
(assert (<= on_0_t 1))
(assert (<= 0 on_1_0))
(assert (<= on_1_0 1))
(assert (<= 0 on_1_t))
(assert (<= on_1_t 1))
(assert (<= 0 on_2_0))
(assert (<= on_2_0 1))
(assert (<= 0 on_2_t))
(assert (<= on_2_t 1))
(assert (<= 0 on_3_0))
(assert (<= on_3_0 1))
(assert (<= 0 on_3_t))
(assert (<= on_3_t 1))
(assert (<= -20 o2_0_0))
(assert (<= o2_0_0 100))
(assert (<= -20 o2_0_t))
(assert (<= o2_0_t 100))
(assert (<= -20 o2_1_0))
(assert (<= o2_1_0 100))
(assert (<= -20 o2_1_t))
(assert (<= o2_1_t 100))
(assert (<= -20 o2_2_0))
(assert (<= o2_2_0 100))
(assert (<= -20 o2_2_t))
(assert (<= o2_2_t 100))
(assert (<= -20 o2_3_0))
(assert (<= o2_3_0 100))
(assert (<= -20 o2_3_t))
(assert (<= o2_3_t 100))
(assert (<= -20 o1_0_0))
(assert (<= o1_0_0 100))
(assert (<= -20 o1_0_t))
(assert (<= o1_0_t 100))
(assert (<= -20 o1_1_0))
(assert (<= o1_1_0 100))
(assert (<= -20 o1_1_t))
(assert (<= o1_1_t 100))
(assert (<= -20 o1_2_0))
(assert (<= o1_2_0 100))
(assert (<= -20 o1_2_t))
(assert (<= o1_2_t 100))
(assert (<= -20 o1_3_0))
(assert (<= o1_3_0 100))
(assert (<= -20 o1_3_t))
(assert (<= o1_3_t 100))
(assert (<= 0 time_0 [0.000000]))
(assert (<= time_0 1 [0.000000]))
(assert (<= 0 time_1 [0.000000]))
(assert (<= time_1 1 [0.000000]))
(assert (<= 0 time_2 [0.000000]))
(assert (<= time_2 1 [0.000000]))
(assert (<= 0 time_3 [0.000000]))
(assert (<= time_3 1 [0.000000]))
(assert (<= 1 mode_0))
(assert (<= mode_0 4))
(assert (<= 1 mode_1))
(assert (<= mode_1 4))
(assert (<= 1 mode_2))
(assert (<= mode_2 4))
(assert (<= 1 mode_3))
(assert (<= mode_3 4))
(assert (and (= mode_3 4) (and (= pr_0_0 1) (or (= on_0_0 1) (= on_0_0 0)) (< o2_0_0 (+ 21 3)) (< (- 19 3) o2_0_0) (< o1_0_0 (+ 21 3)) (< (- 19 3) o1_0_0) (< vx_0_0 (+ 21 2)) (< (- 19 2) vx_0_0) (< x_0_0 (+ 21 2)) (< (- 19 2) x_0_0) (<= tr_0_0 0.014) (<= 0.01 tr_0_0)) (= mode_0 1) (or (and (= mode_1 4) (or (>= x_0_t (+ 21 3)) (>= (- 19 3) x_0_t)) (= pr_1_0 pr_0_t) (= tr_1_0 tr_0_t) (= on_1_0 on_0_t) (= o2_1_0 o2_0_t) (= o1_1_0 o1_0_t) (= vx_1_0 vx_0_t) (= x_1_0 x_0_t)) (and (= mode_1 2) (= tr_0_t 0) (= pr_1_0 pr_0_t) (= tr_1_0 0.2) (= on_1_0 on_0_t) (= o2_1_0 o2_0_t) (= o1_1_0 o1_0_t) (= vx_1_0 x_0_t) (= x_1_0 x_0_t))) (= [o1_0_t o2_0_t on_0_t pr_0_t tr_0_t vx_0_t x_0_t] (integral 0. time_0 [o1_0_0 o2_0_0 on_0_0 pr_0_0 tr_0_0 vx_0_0 x_0_0] flow_1)) (= mode_0 1) (forall_t 1 [0 time_0] (and (<= x_0_t (+ 21 3)) (<= (- 19 3) x_0_t))) (<= x_0_0 (+ 21 3)) (<= (- 19 3) x_0_0) (<= x_0_t (+ 21 3)) (<= (- 19 3) x_0_t) (or (and (= mode_2 4) (or (>= x_1_t (+ 21 3)) (>= (- 19 3) x_1_t)) (= pr_2_0 pr_1_t) (= tr_2_0 tr_1_t) (= on_2_0 on_1_t) (= o2_2_0 o2_1_t) (= o1_2_0 o1_1_t) (= vx_2_0 vx_1_t) (= x_2_0 x_1_t)) (and (= mode_2 3) (= tr_1_t 0) (= pr_2_0 pr_1_t) (= tr_2_0 pr_1_t) (or (and (= on_2_0 0) (>= vx_1_t 19) (= on_1_t 0)) (and (= on_2_0 1) (< vx_1_t 19) (= on_1_t 0)) (and (= on_2_0 0) (> vx_1_t 21) (= on_1_t 1)) (and (= on_2_0 1) (<= vx_1_t 21) (= on_1_t 1))) (= o2_2_0 o2_1_t) (= o1_2_0 o1_1_t) (= vx_2_0 vx_1_t) (= x_2_0 x_1_t))) (= [o1_1_t o2_1_t on_1_t pr_1_t tr_1_t vx_1_t x_1_t] (integral 0. time_1 [o1_1_0 o2_1_0 on_1_0 pr_1_0 tr_1_0 vx_1_0 x_1_0] flow_2)) (= mode_1 2) (forall_t 2 [0 time_1] (and (<= x_1_t (+ 21 3)) (<= (- 19 3) x_1_t))) (<= x_1_0 (+ 21 3)) (<= (- 19 3) x_1_0) (<= x_1_t (+ 21 3)) (<= (- 19 3) x_1_t) (or (and (= mode_3 4) (or (>= x_2_t (+ 21 3)) (>= (- 19 3) x_2_t)) (= pr_3_0 pr_2_t) (= tr_3_0 tr_2_t) (= on_3_0 on_2_t) (= o2_3_0 o2_2_t) (= o1_3_0 o1_2_t) (= vx_3_0 vx_2_t) (= x_3_0 x_2_t)) (and (= mode_3 1) (= tr_2_t 0) (= pr_3_0 1) (= on_3_0 on_2_t) (= o2_3_0 o2_2_t) (= o1_3_0 o1_2_t) (= vx_3_0 vx_2_t) (= x_3_0 x_2_t) (<= tr_3_0 0.014) (<= 0.01 tr_3_0))) (= [o1_2_t o2_2_t on_2_t pr_2_t tr_2_t vx_2_t x_2_t] (integral 0. time_2 [o1_2_0 o2_2_0 on_2_0 pr_2_0 tr_2_0 vx_2_0 x_2_0] flow_3)) (= mode_2 3) (forall_t 3 [0 time_2] (and (<= x_2_t (+ 21 3)) (<= (- 19 3) x_2_t))) (<= x_2_0 (+ 21 3)) (<= (- 19 3) x_2_0) (<= x_2_t (+ 21 3)) (<= (- 19 3) x_2_t) (= [o1_3_t o2_3_t on_3_t pr_3_t tr_3_t vx_3_t x_3_t] (integral 0. time_3 [o1_3_0 o2_3_0 on_3_0 pr_3_0 tr_3_0 vx_3_0 x_3_0] flow_4)) (= mode_3 4)))
(check-sat)
(exit)
