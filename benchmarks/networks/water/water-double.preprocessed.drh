









[0, 10] x1;
[0, 10] x2;

[0, 1] tau;
[0, 1] time;

{mode 1;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = (5.0 - 0.5 * sqrt(2*9.80665) * sqrt(x1)) / 2.0; 
        d/dt[x2] = (3.0 + 0.5 * sqrt(2*9.80665) * (sqrt(x1) - sqrt(x2))) / 4.0;
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 < 5) (x2 <  5)) ==> 
        @1 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 < 5) (x2 >= 5)) ==> 
	@2 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 >= 5) (x2 < 5)) ==> 
	@3 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 >= 5) (x2 >= 5)) ==> 
	@4 (and (x1' = x1) (x2' = x2) (tau' = 0));
}
{mode 2;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = (5.0 - 0.5 * sqrt(2*9.80665) * sqrt(x1)) / 2.0; 
        d/dt[x2] = (0.5 * sqrt(2*9.80665) * (sqrt(x1) - sqrt(x2))) / 4.0;
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 < 5) (x2 <  5)) ==> 
        @1 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 < 5) (x2 >= 5)) ==> 
	@2 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 >= 5) (x2 < 5)) ==> 
	@3 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 >= 5) (x2 >= 5)) ==> 
	@4 (and (x1' = x1) (x2' = x2) (tau' = 0));
}
{mode 3;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = (- 0.5 * sqrt(2*9.80665) * sqrt(x1)) / 2.0; 
        d/dt[x2] = (3.0 + 0.5 * sqrt(2*9.80665) * (sqrt(x1) - sqrt(x2))) / 4.0;
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 < 5) (x2 <  5)) ==> 
        @1 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 < 5) (x2 >= 5)) ==> 
	@2 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 >= 5) (x2 < 5)) ==> 
	@3 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 >= 5) (x2 >= 5)) ==> 
	@4 (and (x1' = x1) (x2' = x2) (tau' = 0));
}
{mode 4;

  invt: (tau >= 0);
        (tau <= 1);
  flow:
        d/dt[x1] = (- 0.5 * sqrt(2*9.80665) * sqrt(x1)) / 2.0; 
        d/dt[x2] = (0.5 * sqrt(2*9.80665) * (sqrt(x1) - sqrt(x2))) / 4.0;
        d/dt[tau]  = 1;
  jump:
        (and (tau = 1) (x1 < 5) (x2 <  5)) ==> 
        @1 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 < 5) (x2 >= 5)) ==> 
	@2 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 >= 5) (x2 < 5)) ==> 
	@3 (and (x1' = x1) (x2' = x2) (tau' = 0));

        (and (tau = 1) (x1 >= 5) (x2 >= 5)) ==> 
	@4 (and (x1' = x1) (x2' = x2) (tau' = 0));
}

init:
@1  (and (x1 >= 5 - 0.1) (x1 <= 5 + 0.1) (x2 >= 5 - 0.1) (x2 <= 5 + 0.1) (tau = 0));

goal:
@1  (and (or (x1 < 5 - 2) (x1 > 5 + 2)) (or (x2 < 5 - 2) (x2 > 5 + 2)));
@2  (and (or (x1 < 5 - 2) (x1 > 5 + 2)) (or (x2 < 5 - 2) (x2 > 5 + 2)));
@3  (and (or (x1 < 5 - 2) (x1 > 5 + 2)) (or (x2 < 5 - 2) (x2 > 5 + 2)));
@4  (and (or (x1 < 5 - 2) (x1 > 5 + 2)) (or (x2 < 5 - 2) (x2 > 5 + 2)));

