(set-logic QF_NRA_ODE)
(declare-fun x_0_1_t () Real)
(declare-fun x_0_1_0 () Real)
(declare-fun x_1_2_t () Real)
(declare-fun x_1_2_0 () Real)
(declare-fun x_2_1_t () Real)
(declare-fun x_2_1_0 () Real)
(declare-fun x_3_2_t () Real)
(declare-fun x_3_2_0 () Real)
(declare-fun x_4_1_t () Real)
(declare-fun x_4_1_0 () Real)
(declare-fun x_5_2_t () Real)
(declare-fun x_5_2_0 () Real)
(declare-fun x_6_1_t () Real)
(declare-fun x_6_1_0 () Real)
(declare-fun x_7_2_t () Real)
(declare-fun x_7_2_0 () Real)
(declare-fun x_8_1_t () Real)
(declare-fun x_8_1_0 () Real)
(declare-fun x_9_2_t () Real)
(declare-fun x_9_2_0 () Real)
(declare-fun x_10_1_t () Real)
(declare-fun x_10_1_0 () Real)
(declare-fun v_0_1_t () Real)
(declare-fun v_0_1_0 () Real)
(declare-fun v_1_2_t () Real)
(declare-fun v_1_2_0 () Real)
(declare-fun v_2_1_t () Real)
(declare-fun v_2_1_0 () Real)
(declare-fun v_3_2_t () Real)
(declare-fun v_3_2_0 () Real)
(declare-fun v_4_1_t () Real)
(declare-fun v_4_1_0 () Real)
(declare-fun v_5_2_t () Real)
(declare-fun v_5_2_0 () Real)
(declare-fun v_6_1_t () Real)
(declare-fun v_6_1_0 () Real)
(declare-fun v_7_2_t () Real)
(declare-fun v_7_2_0 () Real)
(declare-fun v_8_1_t () Real)
(declare-fun v_8_1_0 () Real)
(declare-fun v_9_2_t () Real)
(declare-fun v_9_2_0 () Real)
(declare-fun v_10_1_t () Real)
(declare-fun v_10_1_0 () Real)
(declare-fun time_1 () Real)
(declare-fun time_4 () Real)
(declare-fun time_5 () Real)
(declare-fun time_8 () Real)
(declare-fun time_9 () Real)
(declare-fun time_12 () Real)
(declare-fun time_13 () Real)
(declare-fun time_16 () Real)
(declare-fun time_17 () Real)
(declare-fun time_20 () Real)
(declare-fun time_21 () Real)
(declare-fun mode_0 () Real)
(declare-fun mode_1 () Real)
(declare-fun mode_2 () Real)
(declare-fun mode_3 () Real)
(declare-fun mode_4 () Real)
(declare-fun mode_5 () Real)
(declare-fun mode_6 () Real)
(declare-fun mode_7 () Real)
(declare-fun mode_8 () Real)
(declare-fun mode_9 () Real)
(declare-fun mode_10 () Real)
(define-ode 1 (= d/dt[x_0_1] v_0_1))
(define-ode 1 (= d/dt[v_0_1] (-9.800000 + (0.100000 * (v_0_1 ^ 2.000000)))))
(define-ode 4 (= d/dt[x_1_2] v_1_2))
(define-ode 4 (= d/dt[v_1_2] (-9.800000 - (0.100000 * (v_1_2 ^ 2.000000)))))
(define-ode 5 (= d/dt[x_2_1] v_2_1))
(define-ode 5 (= d/dt[v_2_1] (-9.800000 + (0.100000 * (v_2_1 ^ 2.000000)))))
(define-ode 8 (= d/dt[x_3_2] v_3_2))
(define-ode 8 (= d/dt[v_3_2] (-9.800000 - (0.100000 * (v_3_2 ^ 2.000000)))))
(define-ode 9 (= d/dt[x_4_1] v_4_1))
(define-ode 9 (= d/dt[v_4_1] (-9.800000 + (0.100000 * (v_4_1 ^ 2.000000)))))
(define-ode 12 (= d/dt[x_5_2] v_5_2))
(define-ode 12 (= d/dt[v_5_2] (-9.800000 - (0.100000 * (v_5_2 ^ 2.000000)))))
(define-ode 13 (= d/dt[x_6_1] v_6_1))
(define-ode 13 (= d/dt[v_6_1] (-9.800000 + (0.100000 * (v_6_1 ^ 2.000000)))))
(define-ode 16 (= d/dt[x_7_2] v_7_2))
(define-ode 16 (= d/dt[v_7_2] (-9.800000 - (0.100000 * (v_7_2 ^ 2.000000)))))
(define-ode 17 (= d/dt[x_8_1] v_8_1))
(define-ode 17 (= d/dt[v_8_1] (-9.800000 + (0.100000 * (v_8_1 ^ 2.000000)))))
(define-ode 20 (= d/dt[x_9_2] v_9_2))
(define-ode 20 (= d/dt[v_9_2] (-9.800000 - (0.100000 * (v_9_2 ^ 2.000000)))))
(define-ode 21 (= d/dt[x_10_1] v_10_1))
(define-ode 21 (= d/dt[v_10_1] (-9.800000 + (0.100000 * (v_10_1 ^ 2.000000)))))
(assert (<= 0.000000 x_0_1_t))
(assert (<= x_0_1_t 20.000000))
(assert (<= 0.000000 x_0_1_0))
(assert (<= x_0_1_0 20.000000))
(assert (<= 0.000000 x_1_2_t))
(assert (<= x_1_2_t 20.000000))
(assert (<= 0.000000 x_1_2_0))
(assert (<= x_1_2_0 20.000000))
(assert (<= 0.000000 x_2_1_t))
(assert (<= x_2_1_t 20.000000))
(assert (<= 0.000000 x_2_1_0))
(assert (<= x_2_1_0 20.000000))
(assert (<= 0.000000 x_3_2_t))
(assert (<= x_3_2_t 20.000000))
(assert (<= 0.000000 x_3_2_0))
(assert (<= x_3_2_0 20.000000))
(assert (<= 0.000000 x_4_1_t))
(assert (<= x_4_1_t 20.000000))
(assert (<= 0.000000 x_4_1_0))
(assert (<= x_4_1_0 20.000000))
(assert (<= 0.000000 x_5_2_t))
(assert (<= x_5_2_t 20.000000))
(assert (<= 0.000000 x_5_2_0))
(assert (<= x_5_2_0 20.000000))
(assert (<= 0.000000 x_6_1_t))
(assert (<= x_6_1_t 20.000000))
(assert (<= 0.000000 x_6_1_0))
(assert (<= x_6_1_0 20.000000))
(assert (<= 0.000000 x_7_2_t))
(assert (<= x_7_2_t 20.000000))
(assert (<= 0.000000 x_7_2_0))
(assert (<= x_7_2_0 20.000000))
(assert (<= 0.000000 x_8_1_t))
(assert (<= x_8_1_t 20.000000))
(assert (<= 0.000000 x_8_1_0))
(assert (<= x_8_1_0 20.000000))
(assert (<= 0.000000 x_9_2_t))
(assert (<= x_9_2_t 20.000000))
(assert (<= 0.000000 x_9_2_0))
(assert (<= x_9_2_0 20.000000))
(assert (<= 0.000000 x_10_1_t))
(assert (<= x_10_1_t 20.000000))
(assert (<= 0.000000 x_10_1_0))
(assert (<= x_10_1_0 20.000000))
(assert (<= -15.000000 v_0_1_t))
(assert (<= v_0_1_t 15.000000))
(assert (<= -15.000000 v_0_1_0))
(assert (<= v_0_1_0 15.000000))
(assert (<= -15.000000 v_1_2_t))
(assert (<= v_1_2_t 15.000000))
(assert (<= -15.000000 v_1_2_0))
(assert (<= v_1_2_0 15.000000))
(assert (<= -15.000000 v_2_1_t))
(assert (<= v_2_1_t 15.000000))
(assert (<= -15.000000 v_2_1_0))
(assert (<= v_2_1_0 15.000000))
(assert (<= -15.000000 v_3_2_t))
(assert (<= v_3_2_t 15.000000))
(assert (<= -15.000000 v_3_2_0))
(assert (<= v_3_2_0 15.000000))
(assert (<= -15.000000 v_4_1_t))
(assert (<= v_4_1_t 15.000000))
(assert (<= -15.000000 v_4_1_0))
(assert (<= v_4_1_0 15.000000))
(assert (<= -15.000000 v_5_2_t))
(assert (<= v_5_2_t 15.000000))
(assert (<= -15.000000 v_5_2_0))
(assert (<= v_5_2_0 15.000000))
(assert (<= -15.000000 v_6_1_t))
(assert (<= v_6_1_t 15.000000))
(assert (<= -15.000000 v_6_1_0))
(assert (<= v_6_1_0 15.000000))
(assert (<= -15.000000 v_7_2_t))
(assert (<= v_7_2_t 15.000000))
(assert (<= -15.000000 v_7_2_0))
(assert (<= v_7_2_0 15.000000))
(assert (<= -15.000000 v_8_1_t))
(assert (<= v_8_1_t 15.000000))
(assert (<= -15.000000 v_8_1_0))
(assert (<= v_8_1_0 15.000000))
(assert (<= -15.000000 v_9_2_t))
(assert (<= v_9_2_t 15.000000))
(assert (<= -15.000000 v_9_2_0))
(assert (<= v_9_2_0 15.000000))
(assert (<= -15.000000 v_10_1_t))
(assert (<= v_10_1_t 15.000000))
(assert (<= -15.000000 v_10_1_0))
(assert (<= v_10_1_0 15.000000))
(assert (<= 0.000000 time_1))
(assert (<= time_1 4.000000))
(assert (<= 0.000000 time_4))
(assert (<= time_4 4.000000))
(assert (<= 0.000000 time_5))
(assert (<= time_5 4.000000))
(assert (<= 0.000000 time_8))
(assert (<= time_8 4.000000))
(assert (<= 0.000000 time_9))
(assert (<= time_9 4.000000))
(assert (<= 0.000000 time_12))
(assert (<= time_12 4.000000))
(assert (<= 0.000000 time_13))
(assert (<= time_13 4.000000))
(assert (<= 0.000000 time_16))
(assert (<= time_16 4.000000))
(assert (<= 0.000000 time_17))
(assert (<= time_17 4.000000))
(assert (<= 0.000000 time_20))
(assert (<= time_20 4.000000))
(assert (<= 0.000000 time_21))
(assert (<= time_21 4.000000))
(assert (<= 1.000000 mode_0))
(assert (<= mode_0 2.000000))
(assert (<= 1.000000 mode_1))
(assert (<= mode_1 2.000000))
(assert (<= 1.000000 mode_2))
(assert (<= mode_2 2.000000))
(assert (<= 1.000000 mode_3))
(assert (<= mode_3 2.000000))
(assert (<= 1.000000 mode_4))
(assert (<= mode_4 2.000000))
(assert (<= 1.000000 mode_5))
(assert (<= mode_5 2.000000))
(assert (<= 1.000000 mode_6))
(assert (<= mode_6 2.000000))
(assert (<= 1.000000 mode_7))
(assert (<= mode_7 2.000000))
(assert (<= 1.000000 mode_8))
(assert (<= mode_8 2.000000))
(assert (<= 1.000000 mode_9))
(assert (<= mode_9 2.000000))
(assert (<= 1.000000 mode_10))
(assert (<= mode_10 2.000000))
(assert (and (=> (= mode_9 2.000000) (and (= mode_10 1.000000) (= v_9_2_t 0.000000) (= v_10_1_0 v_9_2_t) (= x_10_1_0 x_9_2_t) (forall_t (<= v_10_1_t 0.000000)) (<= v_10_1_t 0.000000) (<= v_10_1_0 0.000000) (forall_t (>= x_10_1_t 0.000000)) (>= x_10_1_t 0.000000) (>= x_10_1_0 0.000000))) (=> (= mode_8 1.000000) (and (= mode_9 2.000000) (= x_8_1_t 0.000000) (= v_9_2_0 (- (* 0.900000 v_8_1_t))) (= x_9_2_0 x_8_1_t) (forall_t (>= v_9_2_t 0.000000)) (>= v_9_2_t 0.000000) (>= v_9_2_0 0.000000) (forall_t (>= x_9_2_t 0.000000)) (>= x_9_2_t 0.000000) (>= x_9_2_0 0.000000))) (=> (= mode_7 2.000000) (and (= mode_8 1.000000) (= v_7_2_t 0.000000) (= v_8_1_0 v_7_2_t) (= x_8_1_0 x_7_2_t) (forall_t (<= v_8_1_t 0.000000)) (<= v_8_1_t 0.000000) (<= v_8_1_0 0.000000) (forall_t (>= x_8_1_t 0.000000)) (>= x_8_1_t 0.000000) (>= x_8_1_0 0.000000))) (=> (= mode_6 1.000000) (and (= mode_7 2.000000) (= x_6_1_t 0.000000) (= v_7_2_0 (- (* 0.900000 v_6_1_t))) (= x_7_2_0 x_6_1_t) (forall_t (>= v_7_2_t 0.000000)) (>= v_7_2_t 0.000000) (>= v_7_2_0 0.000000) (forall_t (>= x_7_2_t 0.000000)) (>= x_7_2_t 0.000000) (>= x_7_2_0 0.000000))) (=> (= mode_5 2.000000) (and (= mode_6 1.000000) (= v_5_2_t 0.000000) (= v_6_1_0 v_5_2_t) (= x_6_1_0 x_5_2_t) (forall_t (<= v_6_1_t 0.000000)) (<= v_6_1_t 0.000000) (<= v_6_1_0 0.000000) (forall_t (>= x_6_1_t 0.000000)) (>= x_6_1_t 0.000000) (>= x_6_1_0 0.000000))) (=> (= mode_4 1.000000) (and (= mode_5 2.000000) (= x_4_1_t 0.000000) (= v_5_2_0 (- (* 0.900000 v_4_1_t))) (= x_5_2_0 x_4_1_t) (forall_t (>= v_5_2_t 0.000000)) (>= v_5_2_t 0.000000) (>= v_5_2_0 0.000000) (forall_t (>= x_5_2_t 0.000000)) (>= x_5_2_t 0.000000) (>= x_5_2_0 0.000000))) (=> (= mode_3 2.000000) (and (= mode_4 1.000000) (= v_3_2_t 0.000000) (= v_4_1_0 v_3_2_t) (= x_4_1_0 x_3_2_t) (forall_t (<= v_4_1_t 0.000000)) (<= v_4_1_t 0.000000) (<= v_4_1_0 0.000000) (forall_t (>= x_4_1_t 0.000000)) (>= x_4_1_t 0.000000) (>= x_4_1_0 0.000000))) (=> (= mode_2 1.000000) (and (= mode_3 2.000000) (= x_2_1_t 0.000000) (= v_3_2_0 (- (* 0.900000 v_2_1_t))) (= x_3_2_0 x_2_1_t) (forall_t (>= v_3_2_t 0.000000)) (>= v_3_2_t 0.000000) (>= v_3_2_0 0.000000) (forall_t (>= x_3_2_t 0.000000)) (>= x_3_2_t 0.000000) (>= x_3_2_0 0.000000))) (=> (= mode_1 2.000000) (and (= mode_2 1.000000) (= v_1_2_t 0.000000) (= v_2_1_0 v_1_2_t) (= x_2_1_0 x_1_2_t) (forall_t (<= v_2_1_t 0.000000)) (<= v_2_1_t 0.000000) (<= v_2_1_0 0.000000) (forall_t (>= x_2_1_t 0.000000)) (>= x_2_1_t 0.000000) (>= x_2_1_0 0.000000))) (=> (= mode_0 1.000000) (and (= mode_1 2.000000) (= x_0_1_t 0.000000) (= v_1_2_0 (- (* 0.900000 v_0_1_t))) (= x_1_2_0 x_0_1_t) (forall_t (>= v_1_2_t 0.000000)) (>= v_1_2_t 0.000000) (>= v_1_2_0 0.000000) (forall_t (>= x_1_2_t 0.000000)) (>= x_1_2_t 0.000000) (>= x_1_2_0 0.000000))) (= mode_0 1.000000) (= v_0_1_0 0.000000) (> x_0_1_0 5.000000) (forall_t (<= v_0_1_t 0.000000)) (<= v_0_1_t 0.000000) (<= v_0_1_0 0.000000) (forall_t (>= x_0_1_t 0.000000)) (>= x_0_1_t 0.000000) (>= x_0_1_0 0.000000) (= mode_10 1.000000) (= v_10_1_t v_10_1_t) (>= x_10_1_t 0.480000)))
(check-sat)
(exit)
